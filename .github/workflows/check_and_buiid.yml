name: "Test Code and Build Container"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/**'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: javascript-typescript
          build-mode: none
          
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

    - name: send result to tg
      uses: robotomize/notify-telegram@v0.1.0
      with:
        chat: ${{ secrets.TG_CHAT_ID }} 
        token: ${{ secrets.TG_BOT_TOKEN }}
        status: ${{ job.status }}

  build:
    runs-on: ubuntu-latest
    needs: analyze
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: get-npm-version
      uses: martinbeentjes/npm-get-version-action@v1.3.1
      id: package-version

    - name: Log in to the Container registry
      env:
        REGISTRY: ghcr.io
        IMAGE_NAME: ${{ github.repository }}
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5.3.0
      with:
        context: ./src
        push: true
        tags: ${{ steps.package-version.outputs.current-version}},latest

    - name: send result to tg
      uses: robotomize/notify-telegram@v0.1.0
      with:
        chat: ${{ secrets.TG_CHAT_ID }} 
        token: ${{ secrets.TG_BOT_TOKEN }}
        status: ${{ job.status }}
